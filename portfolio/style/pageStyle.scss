$height-sizes: 8;
$width-sizes: 12;
$size-offset: 1.12;

$space-sizes: 8;
$spaceVar: 0.34;

$directions: (
    t:top,
    b:bottom,
    l:left,
    r:right
);

$size__site_content_width: 1024px;

/* Media Queries Not necessarily correct, edit these at will  */
$media_queries : ('mobile' : unquote("only screen and (max-width: 667px)"),
    'tablet' : unquote("only screen and (min-width: 668px) and (max-width: 800px)"),
    'desktop' : unquote("only screen and (min-width: (" + $size__site_content_width + " + 1))"),
    'retina2' : unquote("only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)"),
    'retina3' : unquote("only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)"),
    'landscape' : unquote("screen and (orientation:landscape) "),
    'portrait' : unquote("screen and (orientation:portrait) "));


@mixin media_breakPoints($breakpoints) {
    $conditions : ();

    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append($conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma);
    }

    @media #{$conditions} {
        @content;
    }

}


.flex {
    display: flex;


    &-col {
        @extend .flex;
        flex-direction: column;
    }

    &-row {
        @extend .flex;
        flex-direction: row;
    }
    &-space_evenly{
        justify-content: space-evenly;
    }
    &-center{
        justify-content: center;
    }


}
.align{
    &-center{
        align-items: center;
    }
}

.block {
    display: block;
}

.h {
    @for $i from 1 through $height-sizes {
        &-#{$i} {
            min-height: (100*$i)px;
        }
    }

    &-50vh {
        min-height: 50vh;
    }

    &-75vh {
        min-height: 75vh;
    }

    &-100vh {
        min-height: 100vh;
    }
}

.w {
    @for $i from 1 through $width-sizes {
        &-#{$i} {
            width: ($size-offset*$i)*100px !important;
        }
    }

    &-50vw {
        width: 50vh !important;
    }

    &-75vw {
        width: 75vh !important;
    }

    &-100vw {
        width: 100vw !important;
    }

    &-100 {
        width: 100% !important;
    }
}

.m {
    @for $i from 0 through $space-sizes {
        &-#{$i} {
            margin: $i*$spaceVar*1em;
        }
    }


    @each $letter,
    $direction in $directions {
        @for $i from 0 through $space-sizes {
            &#{$letter}-#{$i} {
                margin-#{$direction}: $i*$spaceVar*1em !important;
            }
        }

        &#{$letter}-auto {
            margin-#{$direction}: auto;
        }
    }

    &-auto {
        margin: auto;
    }

}

.p {
    @for $i from 0 through $space-sizes {
        &-#{$i} {
            padding: $i*$spaceVar*1em !important;
        }
    }


    @each $letter,
    $direction in $directions {
        @for $i from 0 through $space-sizes {
            &#{$letter}-#{$i} {
                padding-#{$direction}: $i*$spaceVar*1em !important;
            }
        }

        &#{$letter}-auto {
            padding-#{$direction}: auto;
        }
    }

    &-auto {
        padding: auto;
    }

}

.profilepic {
    object-fit: cover;
    height: 200px;
    width: 200px;
    object-position: 0 -10px;
    border-radius: 50%;

}

.grid{
    display: grid;

    &-1-1{
        @extend .grid;

        grid-template-columns: repeat(auto-fill, [col-start] minmax(100px, 1fr) [col-end]);
        gap: 32px;
    }
}

.container {


    &-image {
        @include media_breakPoints(mobile) {
            
        }
      

        display: block;
        > *{
            border: 6px rgb(54, 201, 142) solid;
        }

    }

    &-section {
        @extend .flex-col, .container;
        min-height: 100vh;
        width: 100%;
        max-width: 710px;
        @include media_breakPoints(mobile) {
            width: 100%;
            flex-direction: column;
            
            
        }
        @include media_breakPoints(tablet) {
            
        }
        


        h1 {
            margin-bottom: 0;
        }

        p {
            margin-top: 0;
        }


    }


    &-main {
        @extend .flex-col;
        justify-content: center;
        align-items: center;

    }

    &-text {
        @extend .flex-col, .container;
        @include media_breakPoints(mobile tablet) {
            margin-bottom: 2em;
            max-width: 350px;
            margin-inline: 3em;
        }
        align-items: flex-start;
        max-width: 500px;
    }

    &-innerGrid {
        display: grid;

        grid-template-columns: 100px 500px;
        gap: 110px;
        margin-bottom: 4em;
        
        @include media_breakPoints(mobile tablet) {
            grid-template-columns: auto;
            gap: 50px;
            margin-inline: 3em;
            
        }

    }
}



.card {
    border-radius: 8px;
    width: 100%;
    height: auto;

}


// Font Stuff